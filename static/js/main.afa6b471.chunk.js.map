{"version":3,"sources":["components/Floating/FloatingBall.js","constants.js","utils/playerUtils.js","components/Player/PlayerCard/PlayerStats/PlayerStats.js","components/Player/PlayerCard/PlayerCard.js","components/Player/Players/Players.js","App.js","serviceWorker.js","index.js"],"names":["FloatingBall","className","src","alt","API_BASE_URL","API_PLAYER_IMAGE","API_PLAYER_TEAMS_STATS","textWithoutDots","text","Array","from","filter","c","join","PlayerStats","value","player","minutes_per_game","parseInt","String","replace","points_per_game","field_goal_percentage","assists_per_game","rebounds_per_game","steals_per_game","PlayerCard","name","toLowerCase","split","last_name","useState","lastName","nameCleaned","lastNameCleaned","getPlayerImageUrl","image","setImage","imageError","setImageError","imageClasses","classNames","plusOrMinus","Math","random","onError","style","backgroundPosition","floor","transform","team_name","Players","players","setPlayers","getPlayersData","a","Axios","response","data","playersSorted","sort","curr","next","useEffect","map","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6RAUeA,MARf,WACE,OACE,yBAAKC,UAAU,YACb,yBAAKC,IAAI,uBAAuBC,IAAI,O,gDCL7BC,EAAe,qCACfC,EAAgB,UAAMD,EAAN,YAEhBE,GADgB,UAAMF,EAAN,kBACM,UAAMA,EAAN,yBCD7BG,EAAkB,SAACC,GAAD,OACtBC,MAAMC,KAAKF,GACRG,QAAO,SAACC,GAAD,MAAa,MAANA,KACdC,KAAK,KC6BKC,MA/Bf,YAAkC,IDUIC,ECVfC,EAAU,EAAVA,OACrB,OACE,yBAAKf,UAAU,qBACb,yBAAKA,UAAU,4BACb,iCDM8Bc,ECNCC,EAAOC,iBDO5CC,SAASC,OAAOJ,GAAOK,QAAQ,IAAK,QCN9B,0CAEF,yBAAKnB,UAAU,4BACb,gCAASe,EAAOK,iBAChB,yCAEF,yBAAKpB,UAAU,4BACb,gCAASe,EAAOM,uBAChB,sCAEF,yBAAKrB,UAAU,4BACb,gCAASe,EAAOO,kBAChB,0CAEF,yBAAKtB,UAAU,4BACb,gCAASe,EAAOQ,mBAChB,2CAEF,yBAAKvB,UAAU,4BACb,gCAASe,EAAOS,iBAChB,2C,MCkBOC,MAvCf,YAAiC,IAAXV,EAAU,EAAVA,OAAU,EACJA,EAAOW,KAAKC,cAAcC,MAAM,KAD5B,mBACvBF,EADuB,KACjBG,EADiB,OAEJC,mBFFK,SAACJ,EAAMK,GACtC,IAAMC,EAAc1B,EAAgBoB,GAC9BO,EAAkB3B,EAAgByB,GACxC,MAAM,GAAN,OAAU3B,GAAV,OAA6B6B,EAA7B,YAAgDD,GEDbE,CAAkBR,EAAMG,IAF7B,mBAEvBM,EAFuB,KAEhBC,EAFgB,OAGMN,oBAAS,GAHf,mBAGvBO,EAHuB,KAGXC,EAHW,KAUxBC,EAAeC,IAAW,qBAAsB,CACpD,YAAaH,IAGTI,EAAcC,KAAKC,SAAW,IAAO,EAAI,EAE/C,OACE,yBAAK3C,UAAU,eACb,yBAAKA,UAAWuC,GACd,yBAAKtC,IAAKkC,EAAOS,QAdE,WACvBR,EHRF,wDGSEE,GAAc,IAYkCpC,IAAI,KAChD,yBACEF,UAAU,UACV6C,MAAO,CACLC,mBAAmB,GAAD,OAChBJ,KAAKK,MAAsB,IAAhBL,KAAKC,UAAkB,EADlB,YAGlBK,UAAU,UAAD,OAAYP,EAAZ,SAIf,yBAAKzC,UAAU,qBACb,gCAASe,EAAOW,MAChB,2BAAIX,EAAOkC,YAEb,kBAAC,EAAD,CAAalC,OAAQA,M,uBCNZmC,MA5Bf,WAAoB,IAAD,EACapB,mBAAS,IADtB,mBACVqB,EADU,KACDC,EADC,KAGXC,EAAc,uCAAG,gCAAAC,EAAA,sEACEC,IAAM,GAAD,OAAIlD,GAAJ,OANnB,QAKY,cACfmD,EADe,gBAEFA,EAASC,KAFP,OAEfA,EAFe,OAIfC,EAAgBD,EAAKE,MACzB,SAACC,EAAMC,GAAP,OAAgBA,EAAKzC,gBAAkBwC,EAAKxC,mBAG9CgC,EAAWM,GARU,2CAAH,qDAepB,OAJAI,qBAAU,WACRT,MACC,IAGD,yBAAKrD,UAAU,qBACb,wBAAIA,UAAU,aAAd,WACA,yBAAKA,UAAU,8BACZmD,GAAWA,EAAQY,KAAI,SAAChD,GAAD,OAAY,kBAAC,EAAD,CAAYA,OAAQA,U,MCfjDiD,MATf,WACE,OACE,yBAAKhE,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGciE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.afa6b471.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction FloatingBall() {\r\n  return (\r\n    <div className=\"nba-logo\">\r\n      <img src=\"/basketball-icon.png\" alt=\"\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FloatingBall;\r\n","export const API_BASE_URL = \"https://nba-players.herokuapp.com/\";\r\nexport const API_PLAYER_IMAGE = `${API_BASE_URL}players/`;\r\nexport const API_PLAYER_STATS = `${API_BASE_URL}players-stats/`;\r\nexport const API_PLAYER_TEAMS_STATS = `${API_BASE_URL}players-stats-teams/`;\r\nexport const PROFILE_IMAGE_FALLBACK =\r\n  \"https://static.thenounproject.com/png/220984-200.png\";\r\n","import { API_PLAYER_IMAGE, API_PLAYER_STATS } from \"../constants\";\r\n\r\nconst textWithoutDots = (text) =>\r\n  Array.from(text)\r\n    .filter((c) => c !== \".\")\r\n    .join(\"\");\r\n\r\nexport const getPlayerImageUrl = (name, lastName) => {\r\n  const nameCleaned = textWithoutDots(name);\r\n  const lastNameCleaned = textWithoutDots(lastName);\r\n  return `${API_PLAYER_IMAGE}${lastNameCleaned}/${nameCleaned}`;\r\n};\r\n\r\nexport const getIntegerFromMinutes = (value) =>\r\n  parseInt(String(value).replace(\":\", \".\"));\r\n","import React from \"react\";\r\nimport { getIntegerFromMinutes } from \"../../../../utils/playerUtils\";\r\n\r\nfunction PlayerStats({ player }) {\r\n  return (\r\n    <div className=\"player-statistics\">\r\n      <div className=\"player-statistics__block\">\r\n        <strong>{getIntegerFromMinutes(player.minutes_per_game)}</strong>\r\n        <span>minutes</span>\r\n      </div>\r\n      <div className=\"player-statistics__block\">\r\n        <strong>{player.points_per_game}</strong>\r\n        <span>points</span>\r\n      </div>\r\n      <div className=\"player-statistics__block\">\r\n        <strong>{player.field_goal_percentage}</strong>\r\n        <span>FG%</span>\r\n      </div>\r\n      <div className=\"player-statistics__block\">\r\n        <strong>{player.assists_per_game}</strong>\r\n        <span>assists</span>\r\n      </div>\r\n      <div className=\"player-statistics__block\">\r\n        <strong>{player.rebounds_per_game}</strong>\r\n        <span>rebounds</span>\r\n      </div>\r\n      <div className=\"player-statistics__block\">\r\n        <strong>{player.steals_per_game}</strong>\r\n        <span>steals</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerStats;\r\n","import React, { useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PlayerStats from \"./PlayerStats/PlayerStats\";\r\nimport { getPlayerImageUrl } from \"../../../utils/playerUtils\";\r\nimport { PROFILE_IMAGE_FALLBACK } from \"../../../constants\";\r\nimport \"./playerCard.scss\";\r\n\r\nfunction PlayerCard({ player }) {\r\n  const [name, last_name] = player.name.toLowerCase().split(\" \");\r\n  const [image, setImage] = useState(getPlayerImageUrl(name, last_name));\r\n  const [imageError, setImageError] = useState(false);\r\n\r\n  const handleImageError = () => {\r\n    setImage(PROFILE_IMAGE_FALLBACK);\r\n    setImageError(true);\r\n  };\r\n\r\n  const imageClasses = classNames(\"player-card__image\", {\r\n    \"has-error\": imageError,\r\n  });\r\n\r\n  const plusOrMinus = Math.random() < 0.5 ? -1 : 1;\r\n\r\n  return (\r\n    <div className=\"player-card\">\r\n      <div className={imageClasses}>\r\n        <img src={image} onError={handleImageError} alt=\"\" />\r\n        <div\r\n          className=\"overlay\"\r\n          style={{\r\n            backgroundPosition: `${\r\n              Math.floor(Math.random() * 100) + 1\r\n            }% center`,\r\n            transform: `scaleX(${plusOrMinus})`,\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"player-card__info\">\r\n        <strong>{player.name}</strong>\r\n        <p>{player.team_name}</p>\r\n      </div>\r\n      <PlayerStats player={player} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PlayerCard from \"../PlayerCard/PlayerCard\";\r\nimport Axios from \"axios\";\r\nimport { API_PLAYER_TEAMS_STATS } from \"../../../constants\";\r\nimport \"./Players.scss\";\r\nconst team = \"lal\";\r\n\r\nfunction Players() {\r\n  const [players, setPlayers] = useState([]);\r\n\r\n  const getPlayersData = async () => {\r\n    const response = await Axios(`${API_PLAYER_TEAMS_STATS}${team}`);\r\n    const data = await response.data;\r\n\r\n    const playersSorted = data.sort(\r\n      (curr, next) => next.points_per_game - curr.points_per_game\r\n    );\r\n\r\n    setPlayers(playersSorted);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPlayersData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"players-container\">\r\n      <h4 className=\"head-text\">My Team</h4>\r\n      <div className=\"players-container__wrapper\">\r\n        {players && players.map((player) => <PlayerCard player={player} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Players;\r\n","import React from \"react\";\nimport FloatingBall from \"./components/Floating/FloatingBall\";\nimport Players from \"./components/Player/Players/Players\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Players />\n      <FloatingBall />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}